generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String         @id @default(uuid())
  email     String         @unique
  password  String
  role      Role           @default(USER)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  sessions  Session[]
  questions UserQuestion[]
}

model Session {
  id        Int       @id @default(autoincrement())
  name      String
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model QuestionAnswerr {
  id       Int    @id @default(autoincrement())
  question String @unique
  answer   String 
}

model Question {
  id        Int              @id @default(autoincrement())
  content   String           @unique
  type      QuestionType
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  answers   QuestionAnswer[]
  users     UserQuestion[]
}

model Answer {
  id        Int              @id @default(autoincrement())
  content   String           @unique
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  questions QuestionAnswer[]
}

model Message {
  id        Int         @id @default(autoincrement())
  content   String
  type      MessageType
  sessionId Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Session   Session     @relation(fields: [sessionId], references: [id], onDelete: Cascade)
}

model UserQuestion {
  userId     String
  questionId Int
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, questionId])
}

model QuestionAnswer {
  questionId Int
  answerId   Int
  answer     Answer   @relation(fields: [answerId], references: [id], onDelete: Cascade)
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@id([questionId, answerId])
}

enum Role {
  ADMIN
  USER
}

enum QuestionType {
  GLOBAL
  USER
}

enum MessageType {
  SYSTEM
  USER
}
